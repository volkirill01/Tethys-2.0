plugins {
    id 'java'
}

group 'editor'
version '1.0-SNAPSHOT'

sourceCompatibility = 14

project.ext.lwjglVersion = "3.3.2"
project.ext.jomlVersion = "1.10.5"
project.ext.lwjgl3_awtVersion = "0.1.8"
project.ext.lwjglNatives = "natives-windows"
project.ext.imguiVersion = '1.86.9'

repositories {
    flatDir {
        dirs 'libraries'
    }
    jcenter()
    mavenCentral()
}

dependencies {
    // Physics (Box2D)
    implementation name: "jbox2d-library"

    // Serialization stuff
    implementation "com.google.code.gson:gson:2.10.1"

    // ImGUI stuff
    implementation "io.github.spair:imgui-java-app:$imguiVersion"
    implementation "io.github.spair:imgui-java-binding:$imguiVersion"
    implementation "io.github.spair:imgui-java-lwjgl3:$imguiVersion"
    implementation "io.github.spair:imgui-java-natives-windows:$imguiVersion"

    // LWJGL stuff
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-freetype"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-meshoptimizer"
    implementation "org.lwjgl:lwjgl-nanovg"
    implementation "org.lwjgl:lwjgl-nfd"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-stb"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-freetype::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-meshoptimizer::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-nanovg::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-nfd::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
    implementation "org.joml:joml:${jomlVersion}"
    implementation "org.lwjglx:lwjgl3-awt:${lwjgl3_awtVersion}"
}

targetCompatibility = JavaVersion.VERSION_14

jar {
    manifest {
        attributes(
                'Class-Path' : configurations.compileClasspath.collect { it.getName() }.join(' '),
                'Main-Class' : 'Main'
        )
    }

    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task fatJar(type: Jar) {
    manifest.from jar.manifest
//    classifier = 'all'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}

artifacts {
    archives fatJar
}