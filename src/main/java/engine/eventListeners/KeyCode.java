package engine.eventListeners;

import static org.lwjgl.glfw.GLFW.*;

public class KeyCode {

    public static final int Space = GLFW_KEY_SPACE;
    public static final int Apostrophe = GLFW_KEY_APOSTROPHE;
    public static final int Comma = GLFW_KEY_COMMA;
    public static final int Minus = GLFW_KEY_MINUS;
    public static final int Period = GLFW_KEY_PERIOD;
    public static final int Slash = GLFW_KEY_SLASH;
    public static final int Key_0 = GLFW_KEY_0;
    public static final int Key_1 = GLFW_KEY_1;
    public static final int Key_2 = GLFW_KEY_2;
    public static final int Key_3 = GLFW_KEY_3;
    public static final int Key_4 = GLFW_KEY_4;
    public static final int Key_5 = GLFW_KEY_5;
    public static final int Key_6 = GLFW_KEY_6;
    public static final int Key_7 = GLFW_KEY_7;
    public static final int Key_8 = GLFW_KEY_8;
    public static final int Key_9 = GLFW_KEY_9;
    public static final int Semicolon = GLFW_KEY_SEMICOLON;
    public static final int Equal = GLFW_KEY_EQUAL;
    public static final int A = GLFW_KEY_A;
    public static final int B = GLFW_KEY_B;
    public static final int C = GLFW_KEY_C;
    public static final int D = GLFW_KEY_D;
    public static final int E = GLFW_KEY_E;
    public static final int F = GLFW_KEY_F;
    public static final int G = GLFW_KEY_G;
    public static final int H = GLFW_KEY_H;
    public static final int I = GLFW_KEY_I;
    public static final int J = GLFW_KEY_J;
    public static final int K = GLFW_KEY_K;
    public static final int L = GLFW_KEY_L;
    public static final int M = GLFW_KEY_M;
    public static final int N = GLFW_KEY_N;
    public static final int O = GLFW_KEY_O;
    public static final int P = GLFW_KEY_P;
    public static final int Q = GLFW_KEY_Q;
    public static final int R = GLFW_KEY_R;
    public static final int S = GLFW_KEY_S;
    public static final int T = GLFW_KEY_T;
    public static final int U = GLFW_KEY_U;
    public static final int V = GLFW_KEY_V;
    public static final int W = GLFW_KEY_W;
    public static final int X = GLFW_KEY_X;
    public static final int Y = GLFW_KEY_Y;
    public static final int Z = GLFW_KEY_Z;
    public static final int Left_Bracket = GLFW_KEY_LEFT_BRACKET;
    public static final int Backslash = GLFW_KEY_BACKSLASH;
    public static final int Right_Bracket = GLFW_KEY_RIGHT_BRACKET;
    public static final int Grave_Accent = GLFW_KEY_GRAVE_ACCENT;
    public static final int World_1 = GLFW_KEY_WORLD_1;
    public static final int World_2 = GLFW_KEY_WORLD_2;
    public static final int Escape = GLFW_KEY_ESCAPE;
    public static final int Enter = GLFW_KEY_ENTER;
    public static final int Tab = GLFW_KEY_TAB;
    public static final int Backspace = GLFW_KEY_BACKSPACE;
    public static final int Insert = GLFW_KEY_INSERT;
    public static final int Delete = GLFW_KEY_DELETE;
    public static final int Arrow_Right = GLFW_KEY_RIGHT;
    public static final int Arrow_Left = GLFW_KEY_LEFT;
    public static final int Arrow_Down = GLFW_KEY_DOWN;
    public static final int Arrow_Up = GLFW_KEY_UP;
    public static final int Page_Up = GLFW_KEY_PAGE_UP;
    public static final int Page_Down = GLFW_KEY_PAGE_DOWN;
    public static final int Home = GLFW_KEY_HOME;
    public static final int End = GLFW_KEY_END;
    public static final int Caps_Lock = GLFW_KEY_CAPS_LOCK;
    public static final int Scroll_Lock = GLFW_KEY_SCROLL_LOCK;
    public static final int Num_Lock = GLFW_KEY_NUM_LOCK;
    public static final int Print_Screen = GLFW_KEY_PRINT_SCREEN;
    public static final int Pause = GLFW_KEY_PAUSE;
    public static final int F1 = GLFW_KEY_F1;
    public static final int F2 = GLFW_KEY_F2;
    public static final int F3 = GLFW_KEY_F3;
    public static final int F4 = GLFW_KEY_F4;
    public static final int F5 = GLFW_KEY_F5;
    public static final int F6 = GLFW_KEY_F6;
    public static final int F7 = GLFW_KEY_F7;
    public static final int F8 = GLFW_KEY_F8;
    public static final int F9 = GLFW_KEY_F9;
    public static final int F10 = GLFW_KEY_F10;
    public static final int F11 = GLFW_KEY_F11;
    public static final int F12 = GLFW_KEY_F12;
    public static final int F13 = GLFW_KEY_F13;
    public static final int F14 = GLFW_KEY_F14;
    public static final int F15 = GLFW_KEY_F15;
    public static final int F16 = GLFW_KEY_F16;
    public static final int F17 = GLFW_KEY_F17;
    public static final int F18 = GLFW_KEY_F18;
    public static final int F19 = GLFW_KEY_F19;
    public static final int F20 = GLFW_KEY_F20;
    public static final int F21 = GLFW_KEY_F21;
    public static final int F22 = GLFW_KEY_F22;
    public static final int F23 = GLFW_KEY_F23;
    public static final int F24 = GLFW_KEY_F24;
    public static final int F25 = GLFW_KEY_F25;
    public static final int KP_0 = GLFW_KEY_KP_0;
    public static final int KP_1 = GLFW_KEY_KP_1;
    public static final int KP_2 = GLFW_KEY_KP_2;
    public static final int KP_3 = GLFW_KEY_KP_3;
    public static final int KP_4 = GLFW_KEY_KP_4;
    public static final int KP_5 = GLFW_KEY_KP_5;
    public static final int KP_6 = GLFW_KEY_KP_6;
    public static final int KP_7 = GLFW_KEY_KP_7;
    public static final int KP_8 = GLFW_KEY_KP_8;
    public static final int KP_9 = GLFW_KEY_KP_9;
    public static final int KP_Decimal = GLFW_KEY_KP_DECIMAL;
    public static final int KP_Divide = GLFW_KEY_KP_DIVIDE;
    public static final int KP_Multiply = GLFW_KEY_KP_MULTIPLY;
    public static final int KP_Subtract = GLFW_KEY_KP_SUBTRACT;
    public static final int KP_Add = GLFW_KEY_KP_ADD;
    public static final int KP_Enter = GLFW_KEY_KP_ENTER;
    public static final int KP_Equal = GLFW_KEY_KP_EQUAL;
    public static final int Left_Shift = GLFW_KEY_LEFT_SHIFT;
    public static final int Left_Control = GLFW_KEY_LEFT_CONTROL;
    public static final int Left_Alt = GLFW_KEY_LEFT_ALT;
    public static final int Left_Super = GLFW_KEY_LEFT_SUPER;
    public static final int Right_Shift = GLFW_KEY_RIGHT_SHIFT;
    public static final int Right_Control = GLFW_KEY_RIGHT_CONTROL;
    public static final int Right_Alt = GLFW_KEY_RIGHT_ALT;
    public static final int Right_Super = GLFW_KEY_RIGHT_SUPER;
    public static final int Menu = GLFW_KEY_MENU;
    public static final int Mouse_Button_1 = GLFW_MOUSE_BUTTON_1;
    public static final int Mouse_Button_2 = GLFW_MOUSE_BUTTON_2;
    public static final int Mouse_Button_3 = GLFW_MOUSE_BUTTON_3;
    public static final int Mouse_Button_4 = GLFW_MOUSE_BUTTON_4;
    public static final int Mouse_Button_5 = GLFW_MOUSE_BUTTON_5;
    public static final int Mouse_Button_6 = GLFW_MOUSE_BUTTON_6;
    public static final int Mouse_Button_7 = GLFW_MOUSE_BUTTON_7;
    public static final int Mouse_Button_8 = GLFW_MOUSE_BUTTON_8;
    public static final int Mouse_Button_Left = GLFW_MOUSE_BUTTON_LEFT;
    public static final int Mouse_Button_Right = GLFW_MOUSE_BUTTON_RIGHT;
    public static final int Mouse_Button_Middle = GLFW_MOUSE_BUTTON_MIDDLE;
    public static final int Joystick_1 = GLFW_JOYSTICK_1;
    public static final int Joystick_2 = GLFW_JOYSTICK_2;
    public static final int Joystick_3 = GLFW_JOYSTICK_3;
    public static final int Joystick_4 = GLFW_JOYSTICK_4;
    public static final int Joystick_5 = GLFW_JOYSTICK_5;
    public static final int Joystick_6 = GLFW_JOYSTICK_6;
    public static final int Joystick_7 = GLFW_JOYSTICK_7;
    public static final int Joystick_8 = GLFW_JOYSTICK_8;
    public static final int Joystick_9 = GLFW_JOYSTICK_9;
    public static final int Joystick_10 = GLFW_JOYSTICK_10;
    public static final int Joystick_11 = GLFW_JOYSTICK_11;
    public static final int Joystick_12 = GLFW_JOYSTICK_12;
    public static final int Joystick_13 = GLFW_JOYSTICK_13;
    public static final int Joystick_14 = GLFW_JOYSTICK_14;
    public static final int Joystick_15 = GLFW_JOYSTICK_15;
    public static final int Joystick_16 = GLFW_JOYSTICK_16;
    public static final int GamePad_Button_A = GLFW_GAMEPAD_BUTTON_A;
    public static final int GamePad_Button_B = GLFW_GAMEPAD_BUTTON_B;
    public static final int GamePad_Button_X = GLFW_GAMEPAD_BUTTON_X;
    public static final int GamePad_Button_Y = GLFW_GAMEPAD_BUTTON_Y;
    public static final int GamePad_Button_Left_Bumper = GLFW_GAMEPAD_BUTTON_LEFT_BUMPER;
    public static final int GamePad_Button_Right_Bumper = GLFW_GAMEPAD_BUTTON_RIGHT_BUMPER;
    public static final int GamePad_Button_Back = GLFW_GAMEPAD_BUTTON_BACK;
    public static final int GamePad_Button_Start = GLFW_GAMEPAD_BUTTON_START;
    public static final int GamePad_Button_Guide = GLFW_GAMEPAD_BUTTON_GUIDE;
    public static final int GamePad_Button_Left_Thumb = GLFW_GAMEPAD_BUTTON_LEFT_THUMB;
    public static final int GamePad_Button_Right_Thumb = GLFW_GAMEPAD_BUTTON_RIGHT_THUMB;
    public static final int GamePad_Button_Dpad_Up = GLFW_GAMEPAD_BUTTON_DPAD_UP;
    public static final int GamePad_Button_Dpad_Right = GLFW_GAMEPAD_BUTTON_DPAD_RIGHT;
    public static final int GamePad_Button_Dpad_Down = GLFW_GAMEPAD_BUTTON_DPAD_DOWN;
    public static final int GamePad_Button_Dpad_Left = GLFW_GAMEPAD_BUTTON_DPAD_LEFT;
    public static final int GamePad_Button_Cross = GLFW_GAMEPAD_BUTTON_CROSS;
    public static final int GamePad_Button_Circle = GLFW_GAMEPAD_BUTTON_CIRCLE;
    public static final int GamePad_Button_Square = GLFW_GAMEPAD_BUTTON_SQUARE;
    public static final int GamePad_Button_Triangle = GLFW_GAMEPAD_BUTTON_TRIANGLE;
    public static final int GamePad_Axis_Left_X = GLFW_GAMEPAD_AXIS_LEFT_X;
    public static final int GamePad_Axis_Left_Y = GLFW_GAMEPAD_AXIS_LEFT_Y;
    public static final int GamePad_Axis_Right_X = GLFW_GAMEPAD_AXIS_RIGHT_X;
    public static final int GamePad_Axis_Right_Y = GLFW_GAMEPAD_AXIS_RIGHT_Y;
    public static final int GamePad_Axis_Left_Trigger = GLFW_GAMEPAD_AXIS_LEFT_TRIGGER;
    public static final int GamePad_Axis_Right_Trigger = GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER;

//    public static String getButtonName(int button) {
//        return switch (button) {
//            case Space -> "Space";
//            case Apostrophe -> "’";
//            case Comma -> ",";
//            case Minus -> "-";
//            case Period -> ">";
//            case Slash -> "/";
//            case Key_0 -> "0";
//            case Key_1 -> "1";
//            case Key_2 -> "2";
//            case Key_3 -> "3";
//            case Key_4 -> "4";
//            case Key_5 -> "5";
//            case Key_6 -> "6";
//            case Key_7 -> "7";
//            case Key_8 -> "8";
//            case Key_9 -> "9";
//            case Semicolon -> ";";
//            case Equal -> "=";
//            case A -> "A";
//            case B -> "B";
//            case C -> "C";
//            case D -> "D";
//            case E -> "E";
//            case F -> "F";
//            case G -> "G";
//            case H -> "H";
//            case I -> "I";
//            case J -> "J";
//            case K -> "K";
//            case L -> "L";
//            case M -> "M";
//            case N -> "N";
//            case O -> "O";
//            case P -> "P";
//            case Q -> "Q";
//            case R -> "R";
//            case S -> "S";
//            case T -> "T";
//            case U -> "U";
//            case V -> "V";
//            case W -> "W";
//            case X -> "X";
//            case Y -> "Y";
//            case Z -> "Z";
//            case Left_Bracket -> "(";
//            case Backslash -> "\\";
//            case Right_Bracket -> ")";
//            case Grave_Accent -> "`";
//            case World_1 -> "World 1";
//            case World_2 -> "World 2";
//            case Escape -> "Esc";
//            case Enter -> "Enter";
//            case Tab -> "Tab";
//            case Backspace -> "Backspace";
//            case Insert -> "Insert";
//            case Delete -> "Delete";
//            case Arrow_Right -> "Right";
//            case Arrow_Left -> "Left";
//            case Arrow_Down -> "Down";
//            case Arrow_Up -> "Up";
//            case Page_Up -> "Page Up";
//            case Page_Down -> "Page Down";
//            case Home -> "Home";
//            case End -> "End";
//            case Caps_Lock -> "Caps Lock";
//            case Scroll_Lock -> "Scroll Lock";
//            case Num_Lock -> "Num Lock";
//            case Print_Screen -> "Print Screen";
//            case Pause -> "Pause";
//            case F1 -> "F1";
//            case F2 -> "F2";
//            case F3 -> "F3";
//            case F4 -> "F4";
//            case F5 -> "F5";
//            case F6 -> "F6";
//            case F7 -> "F7";
//            case F8 -> "F8";
//            case F9 -> "F9";
//            case F10 -> "F10";
//            case F11 -> "F11";
//            case F12 -> "F12";
//            case F13 -> "F13";
//            case F14 -> "F14";
//            case F15 -> "F15";
//            case F16 -> "F16";
//            case F17 -> "F17";
//            case F18 -> "F18";
//            case F19 -> "F19";
//            case F20 -> "F20";
//            case F21 -> "F21";
//            case F22 -> "F22";
//            case F23 -> "F23";
//            case F24 -> "F24";
//            case F25 -> "F25";
//            case KP_0 -> "KP 0";
//            case KP_1 -> "KP 1";
//            case KP_2 -> "KP 2";
//            case KP_3 -> "KP 3";
//            case KP_4 -> "KP 4";
//            case KP_5 -> "KP 5";
//            case KP_6 -> "KP 6";
//            case KP_7 -> "KP 7";
//            case KP_8 -> "KP 8";
//            case KP_9 -> "KP 9";
//            case KP_Decimal -> "KP .";
//            case KP_Divide -> "KP /";
//            case KP_Multiply -> "KP *";
//            case KP_Subtract -> "KP -";
//            case KP_Add -> "KP +";
//            case KP_Enter -> "KP Enter";
//            case KP_Equal -> "KP =";
//            case Left_Shift -> "(L)Shift";
//            case Left_Control -> "(L)Ctrl";
//            case Left_Alt -> "(L)Alt";
//            case Left_Super -> "(L)Super";
//            case Right_Shift -> "(R)Shift";
//            case Right_Control -> "(R)Ctrl";
//            case Right_Alt -> "(R)Alt";
//            case Right_Super -> "(R)Super";
//            case Menu -> "Menu";
//            case Mouse_Button_1 -> "LMB";
//            case Mouse_Button_2 -> "RMB";
//            case Mouse_Button_3 -> "MMB";
//            case Mouse_Button_4 -> "MB4";
//            case Mouse_Button_5 -> "MB5";
//            case Mouse_Button_6 -> "MB6";
//            case Mouse_Button_7 -> "MB7";
//            case Mouse_Button_8 -> "MB8";
//
//            case -1 -> "null";
//            default -> throw new IllegalStateException("Unexpected button: " + button);
//        };
//    }
}
